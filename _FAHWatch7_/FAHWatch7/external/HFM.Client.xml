<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HFM.Client</name>
    </assembly>
    <members>
        <member name="F:HFM.Client.Connection.InternalBufferSize">
            <summary>
            Internal Network Stream Buffer Size
            </summary>
        </member>
        <member name="F:HFM.Client.Connection.DefaultSendBufferSize">
            <summary>
            Default TcpClient Send Buffer Size
            </summary>
        </member>
        <member name="F:HFM.Client.Connection.DefaultReceiveBufferSize">
            <summary>
            Default TcpClient Receive Buffer Size
            </summary>
        </member>
        <member name="F:HFM.Client.Connection.DefaultTimeoutLength">
            <summary>
            Default Connection, Send, and Receive Timeout Length
            </summary>
        </member>
        <member name="F:HFM.Client.Connection.DefaultSocketTimerLength">
            <summary>
            Default Socket Receive Timer Length
            </summary>
        </member>
        <member name="F:HFM.Client.Connection._updating">
            <summary>
            Don't allow Update() to be called more than once.
            </summary>
        </member>
        <member name="M:HFM.Client.Connection.#ctor">
            <summary>
            Create a Server Connection.
            </summary>
        </member>
        <member name="M:HFM.Client.Connection.#ctor(HFM.Client.ITcpClientFactory)">
            <summary>
            Create a Server Connection.
            </summary>
        </member>
        <member name="M:HFM.Client.Connection.Connect(System.String,System.Int32)">
            <summary>
            Connect to a Server.
            </summary>
            <param name="host">Hostname or IP Address</param>
            <param name="port">TCP Port</param>
            <exception cref="T:System.InvalidOperationException">Throws if the client is already connected.</exception>
            <exception cref="T:System.ArgumentNullException">Throws if either 'host' or 'password' argument is null.</exception>
            <exception cref="T:System.TimeoutException">Throws if connection attempt times out.</exception>
        </member>
        <member name="M:HFM.Client.Connection.Connect(System.String,System.Int32,System.String)">
            <summary>
            Connect to a Server.
            </summary>
            <param name="host">Hostname or IP Address</param>
            <param name="port">TCP Port</param>
            <param name="password">Client Access Password</param>
            <exception cref="T:System.InvalidOperationException">Throws if the client is already connected.</exception>
            <exception cref="T:System.ArgumentNullException">Throws if either 'host' or 'password' argument is null.</exception>
            <exception cref="T:System.TimeoutException">Throws if connection attempt times out.</exception>
        </member>
        <member name="M:HFM.Client.Connection.Close">
            <summary>
            Close the Connection to the Server.
            </summary>
        </member>
        <member name="M:HFM.Client.Connection.SendCommand(System.String)">
            <summary>
            Send a Command to the Server.
            </summary>
            <param name="command">Command Text.  Null, empty, or whitespace strings will be ignored.</param>
            <exception cref="T:System.InvalidOperationException">Throws if client is not connected.</exception>
            <remarks>Callers should make sure they're connected by checking the Connected property.</remarks>
        </member>
        <member name="M:HFM.Client.Connection.Update">
            <summary>
            Update the Data Buffer.
            </summary>
        </member>
        <member name="M:HFM.Client.Connection.GetBuffer">
            <summary>
            Get the buffer value.
            </summary>
            <remarks>Automatically clears the Connection's buffer.</remarks>
        </member>
        <member name="M:HFM.Client.Connection.GetBuffer(System.Boolean)">
            <summary>
            Get the buffer value.
            </summary>
            <param name="clear">True to clear the Connection's buffer.</param>
        </member>
        <member name="M:HFM.Client.Connection.ClearBuffer">
            <summary>
            Clear the buffer value.
            </summary>
        </member>
        <member name="M:HFM.Client.Connection.OnStatusMessage(HFM.Client.StatusMessageEventArgs)">
            <summary>
            Raise the StatusMessage Event.
            </summary>
            <param name="e">Event Arguments (if null the event is cancelled)</param>
        </member>
        <member name="E:HFM.Client.Connection.StatusMessage">
            <summary>
            Fired when a status event occurs.
            </summary>
        </member>
        <member name="E:HFM.Client.Connection.ConnectedChanged">
            <summary>
            Fired when the Connected property changes.
            </summary>
        </member>
        <member name="E:HFM.Client.Connection.DataLengthSent">
            <summary>
            Fired when data is sent to the client.
            </summary>
        </member>
        <member name="E:HFM.Client.Connection.DataLengthReceived">
            <summary>
            Fired when data is received from the client.
            </summary>
        </member>
        <member name="P:HFM.Client.Connection.Connected">
            <summary>
            Gets a value indicating whether the Connection is connected to a remote host.
            </summary>
        </member>
        <member name="P:HFM.Client.Connection.DataAvailable">
            <summary>
            Gets a value that indicates whether data is available to be read.
            </summary>
        </member>
        <member name="P:HFM.Client.Connection.UpdateEnabled">
            <summary>
            Gets or sets a value indicating whether the Connection should process updates.
            </summary>
        </member>
        <member name="P:HFM.Client.Connection.ConnectTimeout">
            <summary>
            Length of time to wait for Connection response (default - 2 seconds).
            </summary>
        </member>
        <member name="P:HFM.Client.Connection.ReceiveLoopTime">
            <summary>
            Length of time between each network stream read attempt (default - 100ms).
            </summary>
        </member>
        <member name="P:HFM.Client.Connection.SendBufferSize">
            <summary>
            Size of outgoing data buffer (default - 8k).
            </summary>
        </member>
        <member name="P:HFM.Client.Connection.ReceiveBufferSize">
            <summary>
            Size of incoming data buffer (default - 8k).
            </summary>
        </member>
        <member name="P:HFM.Client.Connection.DebugReceiveBuffer">
            <summary>
            When true the receive buffer is written to a buffer.txt file.
            </summary>
        </member>
        <member name="M:HFM.Client.StatusMessageEventArgs.#ctor(System.String,System.Diagnostics.TraceLevel)">
            <summary>
            Constructor
            </summary>
            <param name="status">Status Message</param>
            <param name="level">Trace Level</param>
            <exception cref="T:System.ArgumentNullException">Throws if 'status' argument is null.</exception>
        </member>
        <member name="M:HFM.Client.DataTypes.Message.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:HFM.Client.DataTypes.Message.Key">
            <summary>
            Message Key
            </summary>
        </member>
        <member name="P:HFM.Client.DataTypes.Message.Received">
            <summary>
            Received Time Stamp
            </summary>
        </member>
        <member name="P:HFM.Client.DataTypes.ITypedMessageObject.Errors">
            <summary>
            Read-only list of property type conversion errors.
            </summary>
        </member>
        <member name="P:HFM.Client.DataTypes.TypedMessage.Errors">
            <summary>
            Read-only list of property type conversion errors.
            </summary>
        </member>
        <member name="M:HFM.Client.DataTypes.LogFragment.Fill(HFM.Client.DataTypes.JsonMessage)">
            <summary>
            Fill the LogFragment object with data from the given JsonMessage.
            </summary>
            <param name="message">Message object containing JSON value and meta-data.</param>
        </member>
        <member name="P:HFM.Client.DataTypes.LogFragment.Value">
            <summary>
            Log Fragment Value
            </summary>
        </member>
        <member name="M:HFM.Client.DataTypes.Heartbeat.Fill(HFM.Client.DataTypes.JsonMessage)">
            <summary>
            Fill the Heartbeat object with data from the given JsonMessage.
            </summary>
            <param name="message">Message object containing JSON value and meta-data.</param>
        </member>
        <member name="P:HFM.Client.DataTypes.Heartbeat.Value">
            <summary>
            Heartbeat Number
            </summary>
        </member>
        <member name="M:HFM.Client.DataTypes.Info.Fill(HFM.Client.DataTypes.JsonMessage)">
            <summary>
            Fill the Info object with data from the given JsonMessage.
            </summary>
            <param name="message">Message object containing JSON value and meta-data.</param>
        </member>
        <member name="M:HFM.Client.DataTypes.JsonMessage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:HFM.Client.DataTypes.JsonMessage.Value">
            <summary>
            Message Value
            </summary>
        </member>
        <member name="P:HFM.Client.DataTypes.MessagePropertyConversionError.PropertyName">
            <summary>
            Data Class Property Name
            </summary>
        </member>
        <member name="P:HFM.Client.DataTypes.MessagePropertyConversionError.Message">
            <summary>
            Conversion Error Message
            </summary>
        </member>
        <member name="M:HFM.Client.DataTypes.Options.Fill(HFM.Client.DataTypes.JsonMessage)">
            <summary>
            Fill the Options object with data from the given JsonMessage.
            </summary>
            <param name="message">Message object containing JSON value and meta-data.</param>
        </member>
        <member name="M:HFM.Client.DataTypes.SimulationInfo.Fill(HFM.Client.DataTypes.JsonMessage)">
            <summary>
            Fill the SimulationInfo object with data from the given JsonMessage.
            </summary>
            <param name="message">Message object containing JSON value and meta-data.</param>
        </member>
        <member name="M:HFM.Client.DataTypes.SlotCollection.Fill(HFM.Client.DataTypes.JsonMessage)">
            <summary>
            Fill the SlotCollection object with data from the given JsonMessage.
            </summary>
            <param name="message">Message object containing JSON value and meta-data.</param>
        </member>
        <member name="M:HFM.Client.DataTypes.SlotCollection.Fill``1(HFM.Client.DataTypes.JsonMessage)">
            <summary>
            Fill the SlotCollection object with data from the given JsonMessage.
            </summary>
            <param name="message">Message object containing JSON value and meta-data.</param>
        </member>
        <member name="M:HFM.Client.DataTypes.SlotCollection.IndexOf(HFM.Client.DataTypes.Slot)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:HFM.Client.DataTypes.SlotCollection.Insert(System.Int32,HFM.Client.DataTypes.Slot)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param><param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:HFM.Client.DataTypes.SlotCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:HFM.Client.DataTypes.SlotCollection.Add(HFM.Client.DataTypes.Slot)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:HFM.Client.DataTypes.SlotCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="M:HFM.Client.DataTypes.SlotCollection.Contains(HFM.Client.DataTypes.Slot)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:HFM.Client.DataTypes.SlotCollection.CopyTo(HFM.Client.DataTypes.Slot[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param><param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:HFM.Client.DataTypes.SlotCollection.Remove(HFM.Client.DataTypes.Slot)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:HFM.Client.DataTypes.SlotCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:HFM.Client.DataTypes.SlotCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:HFM.Client.DataTypes.SlotCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:HFM.Client.DataTypes.SlotCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="P:HFM.Client.DataTypes.SlotCollection.System#Collections#Generic#ICollection{HFM#Client#DataTypes#Slot}#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:HFM.Client.DataTypes.Slot.Errors">
            <summary>
            Read-only list of property type conversion errors.
            </summary>
        </member>
        <member name="M:HFM.Client.DataTypes.SlotOptions.Fill(HFM.Client.DataTypes.JsonMessage)">
            <summary>
            Fill the SlotOptions object with data from the given JsonMessage.
            </summary>
            <param name="message">Message object containing JSON value and meta-data.</param>
        </member>
        <member name="M:HFM.Client.DataTypes.UnitCollection.Fill(HFM.Client.DataTypes.JsonMessage)">
            <summary>
            Fill the UnitCollection object with data from the given JsonMessage.
            </summary>
            <param name="message">Message object containing JSON value and meta-data.</param>
        </member>
        <member name="M:HFM.Client.DataTypes.UnitCollection.Fill``1(HFM.Client.DataTypes.JsonMessage)">
            <summary>
            Fill the UnitCollection object with data from the given JsonMessage.
            </summary>
            <param name="message">Message object containing JSON value and meta-data.</param>
        </member>
        <member name="M:HFM.Client.DataTypes.UnitCollection.IndexOf(HFM.Client.DataTypes.Unit)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:HFM.Client.DataTypes.UnitCollection.Insert(System.Int32,HFM.Client.DataTypes.Unit)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param><param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:HFM.Client.DataTypes.UnitCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:HFM.Client.DataTypes.UnitCollection.Add(HFM.Client.DataTypes.Unit)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:HFM.Client.DataTypes.UnitCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="M:HFM.Client.DataTypes.UnitCollection.Contains(HFM.Client.DataTypes.Unit)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:HFM.Client.DataTypes.UnitCollection.CopyTo(HFM.Client.DataTypes.Unit[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param><param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:HFM.Client.DataTypes.UnitCollection.Remove(HFM.Client.DataTypes.Unit)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:HFM.Client.DataTypes.UnitCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:HFM.Client.DataTypes.UnitCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:HFM.Client.DataTypes.UnitCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:HFM.Client.DataTypes.UnitCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="P:HFM.Client.DataTypes.UnitCollection.System#Collections#Generic#ICollection{HFM#Client#DataTypes#Unit}#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:HFM.Client.DataTypes.Unit.Errors">
            <summary>
            Read-only list of property type conversion errors.
            </summary>
        </member>
        <member name="M:HFM.Client.MessageCache.#ctor">
            <summary>
            Create a Server Message Cache.
            </summary>
        </member>
        <member name="M:HFM.Client.MessageCache.#ctor(HFM.Client.ITcpClientFactory)">
            <summary>
            Create a Server Message Cache.
            </summary>
        </member>
        <member name="M:HFM.Client.MessageCache.GetJsonMessage(System.String)">
            <summary>
            Get a Server Message.  Returns null if the message is not in the cache.
            </summary>
            <param name="key">Server Message Key</param>
        </member>
        <member name="M:HFM.Client.MessageCache.Update">
            <summary>
            Update the Data Buffer.
            </summary>
        </member>
        <member name="M:HFM.Client.MessageCache.GetNextJsonMessage(System.String@)">
            <summary>
            Parse first Message from the incoming data buffer.  Remaining buffer value is returned to the caller.
            </summary>
            <param name="buffer">Data Buffer Value</param>
            <returns>Message or null if no message is available in the buffer.</returns>
        </member>
        <member name="M:HFM.Client.MessageCache.OnMessageUpdated(HFM.Client.MessageUpdatedEventArgs)">
            <summary>
            Raise the MessageUpdated Event.
            </summary>
            <param name="e">Event Arguments (if null the event is cancelled)</param>
        </member>
        <member name="E:HFM.Client.MessageCache.MessageUpdated">
            <summary>
            Fired when a new or updated message is received.
            </summary>
        </member>
        <member name="E:HFM.Client.MessageCache.UpdateFinished">
            <summary>
            Fired when a data update is complete.
            </summary>
        </member>
        <member name="M:HFM.Client.FahClient.#ctor">
            <summary>
            Create a FahClient.
            </summary>
        </member>
        <member name="M:HFM.Client.FahClient.#ctor(HFM.Client.ITcpClientFactory)">
            <summary>
            Create a FahClient.
            </summary>
        </member>
        <member name="M:HFM.Client.FahClient.GetMessage``1">
            <summary>
            Get a Typed Server Message.  Returns null if the message is not in the cache.
            </summary>
        </member>
        <member name="M:HFM.Client.FahClient.GetMessage``2">
            <summary>
            Get a Typed Server Message.  Returns null if the message is not in the cache.
            </summary>
        </member>
        <member name="M:HFM.Client.FahClient.OnMessageUpdated(HFM.Client.MessageUpdatedEventArgs)">
            <summary>
            Raise the MessageUpdated Event.
            </summary>
            <param name="e">Event Arguments (if null the event is cancelled)</param>
        </member>
        <member name="P:HFM.Client.MessageUpdatedEventArgs.Key">
            <summary>
            Messgae key that was updated.
            </summary>
        </member>
        <member name="P:HFM.Client.MessageUpdatedEventArgs.DataType">
            <summary>
            Messgae data type that was updated.
            </summary>
        </member>
        <member name="F:HFM.Client.JsonMessageKey.Heartbeat">
            <summary>
            Heartbeat Message Key
            </summary>
        </member>
        <member name="F:HFM.Client.JsonMessageKey.Info">
            <summary>
            Info Message Key
            </summary>
        </member>
        <member name="F:HFM.Client.JsonMessageKey.Options">
            <summary>
            Options Message Key
            </summary>
        </member>
        <member name="F:HFM.Client.JsonMessageKey.SimulationInfo">
            <summary>
            Simulation Info Message Key
            </summary>
            <remarks>This message is in response to a command that takes a slot id argument.</remarks>
        </member>
        <member name="F:HFM.Client.JsonMessageKey.SlotInfo">
            <summary>
            Slot Info Message Key
            </summary>
        </member>
        <member name="F:HFM.Client.JsonMessageKey.SlotOptions">
            <summary>
            Slot Options Message Key
            </summary>
            <remarks>This message is in response to a command that takes a slot id argument.</remarks>
        </member>
        <member name="F:HFM.Client.JsonMessageKey.QueueInfo">
            <summary>
            Queue Info Message Key
            </summary>
        </member>
        <member name="F:HFM.Client.JsonMessageKey.LogRestart">
            <summary>
            Log Restart Message Key
            </summary>
        </member>
        <member name="F:HFM.Client.JsonMessageKey.LogUpdate">
            <summary>
            Log Update Message Key
            </summary>
        </member>
        <member name="P:HFM.Client.ITcpClient.Connected">
            <summary>
            Gets a value indicating whether the underlying System.Net.Sockets.Socket for a System.Net.Sockets.TcpClient is connected to a remote host.
            </summary>
        </member>
        <member name="P:HFM.Client.TcpClientAdapter.Connected">
            <summary>
            Gets a value indicating whether the underlying System.Net.Sockets.Socket for a System.Net.Sockets.TcpClient is connected to a remote host.
            </summary>
        </member>
    </members>
</doc>
