<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRTtCR8O
        3XgOBsn/EQjN5B8O3XgtFO0JAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAASQMB
        Ek8MBYzpCQSP/wkEj/8JBI//CQSP/wwFjOkDARJPAAAASQAAAEkAAABJAAAAPgAAADgAAAA4AAAAOAAA
        ADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACgAB0d/wBJSf8ASUn/AElJ/wBJSf8ASUn/AElJ/wBJSf8ASUn/AElJ/wA+Pv8AODj/ADg4/wA4
        OP8AODj/ADg4/wA4OP8AODj/ADg4/wA4OP8AODj/ADg4/wAEBP8AAABdAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAB0AAAD/ALy8/wD///8A////AP///wD///8A////AP///wD///8A////AP///wD/
        //8A////AP///wD///8A////AP///wD///8A////AP///wD///8AWVn/AAAA8wAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQBMfgAKyv/AP///wD///8A////AP///wD///8A////AP///wD/
        //8AAAD/AAAA/wD///8A////AP///wD///8A////AP///wD///8A////APHx/wADA/8AAABZAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQmajwAAAP8A2dn/AP///wD///8A////AP///wD/
        //8A////AP///wAAAP8AAAD/AP///wD///8A////AP///wD///8A////AP///wD///8AVlb/AAAA8QAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtFO0JAQYe/AA8PP8A////AP///wD/
        //8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AO3t/wAD
        A/8AAABWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsbXWAAIC/wDo
        6P8A////AP///wD///8A////AP///wD///8AAAD/AAAA/wD///8A////AP///wD///8A////AP///wD/
        //8AUVH/DAAB/QAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8
        /PkAFxf/AFRU/wD///8A////AP///wD///8A////AP///wAAAP8AAAD/AP///wD///8A////AP///wD/
        //8A////AO3t/wACAv97BBL0LRXtBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAP//yACrq/8ABAT/APf3/wD///8A////AP///wD///8A////AAAA/wAAAP8A////AP///wD/
        //8A////AP///wD///8ATU3/DgAB/0EFPf8OBsn/JxLlOwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAD3DL/APv7/wAICP8AbGz/AP///wD///8A////AP///wD///8AAAD/AAAA/wD/
        //8A////AP///wD///8A////AOnp/wACAv+MBBD/FQaT/w4Gyf8OBsn/JhHkQgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbJEf8A/N//AJOT/wAJCf8A////AP///wD///8A////AP///wAA
        AP8AAAD/AP///wD///8A////AP///wD///8ASkr/EQAB/yUFXf8OBsn/DgbJ/w4Gyf8OBsn/LBTsDwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABskQ/wXMGP8A89f/AAAA/wCGhv8A////AP///wD/
        //8A////AAAA/wAAAP8A////AP///wD///8A////AObm/wACAv8VBE3/DgbJ/w4Gyf8OBsn/DgbJ/w4G
        yf8hD95rAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGyRD/BskQ/wbJEf8BaBf/ABMT/wD/
        //8A////AP///wD///8AAAD/AAAA/wD///8A////AP///wD///8ARUX/AQAT/w0Fx/8OBsn/DgbJ/w4G
        yf8OBsn/DgbJ/xQJ0M4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbJEP8GyRD/BskQ/wW6
        Dv8AAAD/AKam/wD///8A////AP///wAAAP8AAAD/AP///wD///8A////AOTk/wABAf8KBJL/DgbJ/w4G
        yf8OBsn/DgbJ/w4Gyf8OBsn/DwbK+QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABskQ/wbJ
        EP8GyRD/BskQ/wJGBf8AHx//AP///wD///8A////AAAA/wAAAP8A////AP///wD///8AQkL/AQAV/w0F
        yP8OBsn/DgbJ/w4Gyf8OBsn/DgbJ/w4Gyf8UCdDOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAGyRD/BskQ/wbJEP8GyRD/BbAO/wAAAP8AxcX/AP///wD///8AAAD/AAAA/wD///8A////AODg/wAB
        Af8RBGX/DgbJ/w4Gyf8OBsn/DgbJ/w4Gyf8OBsn/DgbJ/yEP3msAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAGyRD/BskQ/wbJEP8GyRD/AS0D/wAvL/8A////AP///wAAAP8AAAD/AP///wD/
        //8APj7/GAAC/5IFHP8VBpj/DgbJ/w4Gyf8OBsn/DgbJ/w4Gyf8OBsn/LBTsDwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGyRD/BskQ/wbJEP8Eow3/AAEB/wDZ2f8A////AP///wD/
        //8A////ANzc/wABAf+VBBH/xgYX/0UGPP8OBsn/DgbJ/w4Gyf8OBsn/DgbJ/yYR5EIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABskQ/wXID/8AHQL/AEND/wD/
        //8A////AP///wD///8AOjr/GwAD/8gFFv/GBhf/wgYX/w4Gyf8OBsn/DgbJ/w4Gyf8nEuU7AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6xREFpMF
        E/EAAgL/AO3t/wD///8A////ANra/wABAf+bBBH/yQYX/8kGF/9zBiP/EAfL7xgL1LAkEOJRLRXtBwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADuFUcC1Aspng4AAf8AWFj/AP///wD///8AODj/HQAD/8gFFv/JBhf+yQYX/+IQOkgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADrE0USfQQS4gAFBf8A+/v/ANXV/wAAAP+aBBH/xgYX/8kGF//WDCuU7hVHAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACKCygMAQAA/QBwcP8ANTX/IAAD/8wHG+rTCyeq3A4ybwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAsL/wAAAP9IBRRN6xREFuwU
        RwcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAD/AAAA0QAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AI8AAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////////5////4H///4AAAH/AAAB/wAAA/8AAAP/gA
        AH/4AAB/+AAAf/gAAD/4AAAf+AAAD/gAAA/4AAAH+AAAB/gAAAf4AAAP/AAAD/4AAB//gAA//+AA///g
        B///8Af///gf///8/////P////3///////8=
</value>
  </data>
</root>